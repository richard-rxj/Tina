#!/usr/bin/env python# encoding: utf-8import pandas as pdimport requestsimport jsondef filterDuplicateTweets(input_tweets):    memo = set()    input_records = input_tweets.to_dict('records')    output_records = []    output_tweets = None    for row in input_records:        tweet_id = row['Tweet_id_str']        if tweet_id not in memo:            memo.add(tweet_id)            output_records.append(row)    return pd.DataFrame(data=output_records)def furtherAnalyzeTweet(dict_tweet):    tweet_message=dict_tweet['Tweet_text']    #todo tone analysedef analyze_tone(text):  #todo    username = 'richard.rxj@gmail.com'    password = '123456Temp'    watsonUrl = 'https://gateway-syd.watsonplatform.net/tone-analyzer/api?version=2017-09-21'    headers = {"content-type": "text/plain"}    data = text    try:        r = requests.post(watsonUrl, auth=(username, password), headers=headers,                          data=data)        return r.text    except:        return Falsedef display_results(data): #todo    data = json.loads(str(data))    print(data)    for i in data['document_tone']['tone_categories']:        print(i['category_name'])        print("-" * len(i['category_name']))        for j in i['tones']:            print(j['tone_name'].ljust(20),(str(round(j['score'] * 100,1)) + "%").rjust(10))        print()    print()if __name__ == '__main__':    # print(analyze_tone("I am ok"))    input_file = '20180226_output_20180507.csv'    output_file = '201901.csv'    df = pd.read_csv(input_file, error_bad_lines=False, warn_bad_lines=True, nrows=1000)    print(df.head())    print(df.shape)    output_df = filterDuplicateTweets(df)    print(output_df.head())    print(output_df.shape)    output_df.to_csv(output_file, index=False )