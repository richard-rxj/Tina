#!/usr/bin/env python# encoding: utf-8import csvfrom pathlib import Pathimport pandas as pdfrom Twitter.tweet_model import CompanyRecordfrom Twitter.tweet_model import TweetRecordclass TweetCommonUtil:    def read_info_from_csv(file_name, key_index, nrows=None):        result = {}        file_check = Path(file_name)        if (not file_check.exists()):            return result        with open(file_name, 'r', encoding='utf-8', errors='ignore') as inputFile:            reader = csv.reader(inputFile)            next(reader)            cur_rows = 0            for row in reader:                screen_name = TweetCommonUtil.get_screen_name(row[key_index])                if (screen_name not in result):                    result[screen_name] = row                cur_rows += 1                if nrows == cur_rows:                    break        return result    def to_csv(line, file_name, is_append):        mode = 'w'        if (is_append == True):            mode = 'a'        try:            with open(file_name, mode, encoding='utf-8', errors='ignore', newline='') as outputFile:                writer = csv.writer(outputFile)                writer.writerow(line)        except:            print("write failed-------" + line)    def get_screen_name(inputString):        return inputString[1:]    def output_company_records_csv(company_records, output_file_name):        output_company_records = []        for company_record in company_records:            output_company_records.append(company_record.to_dict())        pd.DataFrame(data=output_company_records).to_csv(output_file_name, index=False)    def output_tweet_records_csv(tweet_records, output_file_name):        output_tweet_records = []        for tweet_record in tweet_records:            output_tweet_records.append(tweet_record.to_dict())        pd.DataFrame(data=output_tweet_records).to_csv(output_file_name, index=False)    def get_company_records_from_csv(input_file_name):        company_records = []        companys_to_process = pd.read_csv(input_file_name, error_bad_lines=False, warn_bad_lines=True).replace(            {pd.np.nan: None}).to_dict('record')        for company_to_process in companys_to_process:            company_record = CompanyRecord.parse_dict(company_to_process)            company_records.append(company_record)        return company_records    def get_tweet_records_from_csv(input_file_name):        tweet_records = []        tweets_to_process = pd.read_csv(input_file_name, error_bad_lines=False, warn_bad_lines=True,                                        lineterminator="\n").replace({pd.np.nan: None}).to_dict('record')        for tweet_to_process in tweets_to_process:            tweet_record = TweetRecord.parse_dict(tweet_to_process)            tweet_records.append(tweet_record)        return tweet_recordsif __name__ == '__main__':    pass